# Runs tests on Jupyter notebooks

name: Test Jupyter notebooks

# Trigger the workflow on push, pull request and manual trigger
on: [push, pull_request, workflow_call]

# Allow only one concurrent workflow, skipping runs queued between the run in-progress and latest queued.
# And cancel in-progress runs.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  # Job 1: Check code consistency
  code-consistency:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Install quality assurance package for Jupyter notebooks and run in the sample directory
      - name: Install and run nbQA
        run: |
          pip install ruff nbqa
          nbqa ruff examples/

      - name: Suggestion to fix linter issues
        if: ${{ failure() }}
        run: |
            echo "In project root run 'nbqa ruff examples/ --fix' and commit changes to fix issues."
            exit 1

  # Job 2: Test Jupiter notebooks
  test-ipynb:
    needs: code-consistency  # previous job 'code-consistency' need to be finished first

    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-13, macos-14]
        python-version: ['3.10', '3.11', '3.12']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade package installer for Python
        shell: bash
        run: python -m pip install --upgrade pip

      - name: Install Python dependencies
        run: pip install '.[dev,charts]'

      - name: Test Jupyter notebooks
        shell: bash
        run: >
          pytest 
          --nbmake examples/*ipynb 
          --nbmake-timeout=300 
          --color=yes
          -n=auto
